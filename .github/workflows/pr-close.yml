name: PR Closed

on:
  workflow_call:
    inputs:
      ## Required
      packages:
        description: 'Comma-separated list of packages to promote'
        required: true
        type: string
      repository:
        description: 'Repository; e.g. <org>/<repo>'
        required: true
        type: string
      promote_from:
        description: 'Tag to promote; e.g. PR, test or prod'
        required: true
        type: string
      promote_to:
        description: 'Tag to promote to; e.g. test or latest'
        required: true
        type: string

      ### Usually a bad idea / not recommended
      merge_branch:
        description: 'Merge target branch'
        required: false
        type: string
        default: ${{ github.event.repository.default_branch }}

jobs:
  vars:
    runs-on: ubuntu-latest
    outputs:
      packages: ${{ steps.packages.outputs.packages }}
    steps:
      - id: packages
        run: |
          echo "packages=$(jq -cn '$ARGS.positional' --args ${{ inputs.packages }})"
          echo "packages=$(jq -cn '$ARGS.positional' --args ${{ inputs.packages }})" >> $GITHUB_OUTPUT

  promotions:
    name: Promote Images
    needs: vars
    if: github.event.pull_request.base.ref == '${{ inputs.merge_branch }}'
    # if: github.event.pull_request.merged == true && github.event.pull_request.base.ref == '${{ inputs.merge_branch }}'
    runs-on: ubuntu-22.04
    permissions:
      packages: write
    strategy:
      matrix:
        package: ${{ fromJson(needs.vars.outputs.packages) }}
    timeout-minutes: 1
    steps:
      - run: |
          echo "matrix.package: ${{ matrix.package }}"

      # - uses: shrink/actions-docker-registry-tag@v4
      #   with:
      #     registry: ghcr.io
      #     repository: ${{ inputs.repository }}/${{ matrix.package }}
      #     target: ${{ inputs.promote_from }}
      #     tags: ${{ inputs.promote_to }}

# jobs:
#   # # Clean up OpenShift when PR closed, no conditions
#   # cleanup-openshift:
#   #   name: Cleanup OpenShift
#   #   env:
#   #     release: ${{ github.event.repository.name }}-${{ github.event.number }}
#   #   runs-on: ubuntu-22.04
#   #   timeout-minutes: 10
#   #   steps:
#   #     - name: Remove OpenShift artifacts
#   #       run: |
#   #         oc login --token=${{ secrets.OC_TOKEN }} --server=${{ vars.OC_SERVER }}
#   #         oc project ${{ vars.OC_NAMESPACE }} # Safeguard!

#   #         # If found, then remove
#   #         helm status ${{ env.release }} && helm uninstall --no-hooks ${{ env.release }} || \
#   #           echo "Not found: ${{ env.release }}"

#   #         # Remove Bitnami Crunchy PVCs
#   #         oc delete pvc data-${{ env.release }}-bitnami-pg-0 || \
#   #           echo "Not found: pvc data-${{ env.release }}-bitnami-pg-0"

#   vars:
#     name: Variables
#     runs-on: ubuntu-22.04
#     timeout-minutes: 1
#     outputs:
#       packages: ${{ steps.vars.outputs.packages }}
#     steps:
#       - id: vars
#         run: |
#           PACKAGES='${{ toJSON(inputs.packages) }}'
#           echo "PACKAGES: $PACKAGES"
#           echo packages=${PACKAGES} >> $GITHUB_OUTPUT

#   retags:
#     name: Promote Images
#     needs: vars
#     # if: github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'main'
#     runs-on: ubuntu-22.04
#     # permissions:
#     #   packages: write
#     strategy:
#       matrix:
#         package: ${{ fromJSON(needs.vars.outputs.packages) }}
#     timeout-minutes: 1
#     steps:
#       - run: |
#           echo "matrix.package: ${{ matrix.package }}"



#       # - uses: shrink/actions-docker-registry-tag@v4
#       #   with:
#       #     registry: ghcr.io
#       #     repository: ${{ inputs.repository }}/${{ matrix.package }}
#       #     target: ${{ inputs.promote_from }}
#       #     tags: ${{ inputs.promote_to }}
