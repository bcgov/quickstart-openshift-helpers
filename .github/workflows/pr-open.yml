name: PR

on:
  pull_request:

concurrency:
  # Cancel in progress for PR open and close
  group: ${{ github.workflow }}-${{ github.event.number }}
  cancel-in-progress: true

jobs:
  schema-spy:
    name: Schema Spy
    uses: ./.github/workflows/.schema-spy.yml
        
  validate:
    name: Validate
    uses: ./.github/workflows/.pr-validate.yml
    with:
      markdown_links: |
        - [Frontend](https://${{ github.event.repository.name }}-${{ github.event.number }}-frontend.apps.silver.devops.gov.bc.ca)
        - [Backend](https://${{ github.event.repository.name }}-${{ github.event.number }}-frontend.apps.silver.devops.gov.bc.ca/api)

  builds:
    name: Fake Builds (retags)
    runs-on: ubuntu-latest
    strategy:
      matrix:
        package: [backend, frontend, migrations]
    timeout-minutes: 1
    steps:
      - uses: shrink/actions-docker-registry-tag@v4
        with:
          registry: ghcr.io
          repository: ${{ github.repository }}/${{ matrix.package }}
          target: latest
          tags: ${{ github.event.number }}

      - run: |
          # Verify tagging
          INSPECT="docker manifest inspect ghcr.io/${{ github.repository }}/${{ matrix.package }}"
          SOURCE=$(${INSPECT}:latest | jq -r '.manifests[] | select(.platform.architecture=="amd64") | .digest')
          TARGET=$(${INSPECT}:${{ github.event.number }} | jq -r '.manifests[] | select(.platform.architecture=="amd64") | .digest')
          if [ "${SOURCE}" != "${TARGET}" ]; then
            echo "ERROR: Tagging failed!"
            exit 1
          fi

  deploys:
    name: Deploys
    needs: [builds]
    uses: ./.github/workflows/.deployer.yml
    secrets:
      oc_namespace: ${{ secrets.oc_namespace }}
      oc_token: ${{ secrets.oc_token }}

  results:
    name: Results
    needs: [deploys, schema-spy, validate]
    runs-on: ubuntu-latest
    steps:
      - if: needs.deploys.outputs.triggered == 'true'
        run: echo "Success!"

      - if: needs.deploys.outputs.triggered != 'true'
        run: |
          # Handle fail
          echo "needs.deploys == ${{ toJson(needs.deploys) }}"
          exit 1
