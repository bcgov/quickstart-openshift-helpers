name: PR

on:
  pull_request:

concurrency:
  # Cancel in progress for PR open and close
  group: ${{ github.workflow }}-${{ github.event.number }}
  cancel-in-progress: true

permissions: {}

jobs:
  schema-spy:
    name: Schema Spy
    permissions:
      contents: write
      pages: write
    uses: ./.github/workflows/.schema-spy.yml
        
  validate:
    name: Validate
    permissions:
      pull-requests: write
    uses: ./.github/workflows/.pr-validate.yml
    with:
      markdown_links: |
        - [Frontend](https://${{ github.event.repository.name }}-${{ github.event.number }}-frontend.apps.silver.devops.gov.bc.ca)
        - [Backend](https://${{ github.event.repository.name }}-${{ github.event.number }}-frontend.apps.silver.devops.gov.bc.ca/api)

  builds:
    name: Fake Builds (retags)
    permissions:
      packages: write
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        package: [backend, frontend, migrations]
    timeout-minutes: 1
    steps:
      - uses: shrink/actions-docker-registry-tag@f04afd0559f66b288586792eb150f45136a927fa # v4
        with:
          registry: ghcr.io
          repository: ${{ github.repository }}/${{ matrix.package }}
          target: latest
          tags: ${{ github.event.number }}

      - run: |
          # Verify tagging
          INSPECT="docker manifest inspect ghcr.io/${{ github.repository }}/${{ matrix.package }}"
          SOURCE=$(${INSPECT}:latest | jq -r '.manifests[] | select(.platform.architecture=="amd64") | .digest')
          TARGET=$(${INSPECT}:${{ github.event.number }} | jq -r '.manifests[] | select(.platform.architecture=="amd64") | .digest')
          if [ "${SOURCE}" != "${TARGET}" ]; then
            echo "ERROR: Tagging failed!"
            exit 1
          fi

  deploy-db:
    name: Stack
    environment: ${{ inputs.environment }}
    runs-on: ubuntu-24.04
    outputs:
      tag: ${{ inputs.tag || steps.pr.outputs.pr }}
      triggered: ${{ steps.deploy.outputs.triggered }}
    steps:
      - uses: bcgov/action-crunchy@575ffdddb2614c76856f1f6876ca81474e4274a0 # v1.1.0
        name: Deploy Crunchy
        id: deploy_crunchy
        with:
          oc_namespace: ${{ secrets.oc_namespace }}
          oc_token: ${{ secrets.oc_token }}
          values_file: crunchy/values.yml

  deploys:
    name: Deploys
    needs: [builds, deploy-db]
    permissions:
      packages: write
    uses: ./.github/workflows/.deployer.yml
    secrets:
      oc_namespace: ${{ secrets.oc_namespace }}
      oc_token: ${{ secrets.oc_token }}
    with:
      atomic: false
      promote_images: backend frontend migrations
      promote_tags: pr
      repository: bcgov/quickstart-openshift

  csr-generator: # testing, will be deleted
    name: Certificate Generation
    uses: ./.github/workflows/csr-generator.yml
    secrets:
      oc_namespace: ${{ secrets.oc_namespace }}
      oc_token: ${{ secrets.oc_token }}
    with:
      domain: example.gov.bc.ca
      oc_server: https://api.silver.devops.gov.bc.ca:6443

  results:
    name: Results
    needs: [builds, csr-generator, deploys, schema-spy, validate]
    runs-on: ubuntu-24.04
    steps:
      - if: contains(needs.*.result, 'failure')||contains(needs.*.result, 'canceled')
        run: echo "At least one job has failed." && exit 1

      - if: needs.deploys.outputs.triggered == 'true'
        run: echo "Deploy triggered successfully!"

      # - if: needs.deploys.outputs.triggered != 'true'
      #   run: |
      #     # Handle fail
      #     echo "needs.deploys == ${{ toJson(needs.deploys) }}"
      #     exit 1
